pipeline {
    agent none
    stages {
		stage ('UI Automation Code Checkout') {
    		agent {
                label 'MasterAgent'
            }
			steps{
			    git branch: 'master', changelog: false, credentialsId: 'b00799bb-87f3-42f6-8c9a-c7c6680de30c', poll: false, url: 'https://github.com/seankim1973/RKCIUIAutomation.git'
			    sleep 2
			    bat 'nuget.exe restore RKCIUIAutomation.sln'
			    sleep 2
			    bat 'MSBuild RKCIUIAutomation.sln'
			    sleep 2
			}
		}
		stage('Parallel Test Execution') {
            failFast false
            parallel {
                stage("Garnet") {
                    when {
                        expression { params.Garnet == true }
                    }
                    agent {
                        label 'GarnetAgent'
                    }
                    steps {
    					bat 'nunit3-console.exe -p:TestEnv=%TestEnv% -p:Tenant=Garnet -p:Platform=Grid --test=RKCIUIAutomation.Test.Smoke.Verify_LinkCoverage_Level1 ./RKCIUIAutomation/bin/Debug/RKCIUIAutomation.dll --result=TestResult_Garnet.xml'
    					sleep 1
                        nunit testResultsPattern: 'TestResult_Garnet.xml'
                        sleep 1
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: './RKCIUIAutomation/Report/', reportFiles: 'extent_Garnet.html', reportName: 'HTML Report', reportTitles: 'RKCIUIAutomation'])
						sleep 1
                        bat 'nunit-summary.exe ./TestResult_Garnet.xml -out=./TestResult_Garnet.html -xsl=./RKCIUIAutomation/Lib/html-summary.xslt'
                        sleep 1
                        emailext body: '${FILE,path="TestResult_Garnet.html"}', subject: '$DEFAULT_SUBJECT', to: 'schongkim@rkci.com'
                    }
                }
                stage("GLX") {
                    when {
                        expression { params.GLX == true }
                    }
            		agent {
                        label 'GLXAgent'
                    }
                    steps {
    					bat 'nunit3-console.exe -p:TestEnv=%TestEnv% -p:Tenant=GLX -p:Platform=Grid --test=RKCIUIAutomation.Test.Smoke.Verify_LinkCoverage_Level1 ./RKCIUIAutomation/bin/Debug/RKCIUIAutomation.dll --result=TestResult_GLX.xml'
    					sleep 1
                        nunit testResultsPattern: 'TestResult_GLX.xml'
                        sleep 1
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: './RKCIUIAutomation/Report/', reportFiles: 'extent_GLX.html', reportName: 'HTML Report', reportTitles: 'RKCIUIAutomation'])
						sleep 1
                        bat 'nunit-summary.exe ./TestResult_GLX.xml -out=./TestResult_GLX.html -xsl=./RKCIUIAutomation/Lib/html-summary.xslt'
                        sleep 1
                        emailext body: '${FILE,path="TestResult_GLX.html"}', subject: '$DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
    				}
                }
    			stage("SH249") {
    			    when {
    			        expression { params.SH249 == true }
    	            }
    			    agent {
                        label 'SH249Agent'
                    }
    				steps {
    					bat 'nunit3-console.exe -p:TestEnv=%TestEnv% -p:Tenant=SH249 -p:Platform=Grid --test=RKCIUIAutomation.Test.Smoke.Verify_LinkCoverage_Level1 ./RKCIUIAutomation/bin/Debug/RKCIUIAutomation.dll --result=TestResult_SH249.xml'
    					sleep 1
                        nunit testResultsPattern: 'TestResult_SH249.xml'
                        sleep 1
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: './RKCIUIAutomation/Report/', reportFiles: 'extent_SH249.html', reportName: 'HTML Report', reportTitles: 'RKCIUIAutomation'])
						sleep 1
                        bat 'nunit-summary.exe ./TestResult_SH249.xml -out=./TestResult_SH249.html -xsl=./RKCIUIAutomation/Lib/html-summary.xslt'
                        sleep 1
                        emailext body: '${FILE,path="TestResult_SH249.html"}', subject: '$DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
    				}
                }
                stage("SGWay") {
    			    when {
                        expression { params.SGWay == true }
                    }
    			    agent {
                        label 'SGWayAgent'
                    }
                    steps {
    					bat 'nunit3-console.exe -p:TestEnv=%TestEnv% -p:Tenant=SGWay -p:Platform=Grid --test=RKCIUIAutomation.Test.Smoke.Verify_LinkCoverage_Level1 ./RKCIUIAutomation/bin/Debug/RKCIUIAutomation.dll --result=TestResult_SGWay.xml'
    					sleep 1
                        nunit testResultsPattern: 'TestResult_SGWay.xml'
                        sleep 1
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: './RKCIUIAutomation/Report/', reportFiles: 'extent_SGWay.html', reportName: 'HTML Report', reportTitles: 'RKCIUIAutomation'])
						sleep 1
                        bat 'nunit-summary.exe ./TestResult_SGWay.xml -out=./TestResult_SGWay.html -xsl=./RKCIUIAutomation/Lib/html-summary.xslt'
                        sleep 1
                        emailext body: '${FILE,path="TestResult_SGWay.html"}', subject: '$DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
    				}
                }
    			stage("I15Tech") {
    			    when {
                        expression { params.I15Tech == true }
                    }
            		agent {
                        label 'I15TechAgent'
                    }
    				steps {
    					bat 'nunit3-console.exe -p:TestEnv=%TestEnv% -p:Tenant=I15Tech -p:Platform=Grid --test=RKCIUIAutomation.Test.Smoke.Verify_LinkCoverage_Level1 ./RKCIUIAutomation/bin/Debug/RKCIUIAutomation.dll --result=TestResult_I15Tech.xml'
    					sleep 1
                        nunit testResultsPattern: 'TestResult_I15Tech.xml'
                        sleep 1
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: './RKCIUIAutomation/Report/', reportFiles: 'extent_I15Tech.html', reportName: 'HTML Report', reportTitles: 'RKCIUIAutomation'])
						sleep 1
                        bat 'nunit-summary.exe ./TestResult_I15Tech.xml -out=./TestResult_I15Tech.html -xsl=./RKCIUIAutomation/Lib/html-summary.xslt'
                        sleep 1
                        emailext body: '${FILE,path="TestResult_I15Tech.html"}', subject: '$DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
    				}
                }
    			stage("I15South") {
    			    when {
                        expression { params.I15South == true }
                    }
            		agent {
                        label 'I15SouthAgent'
                    }
    				steps {
    					bat 'nunit3-console.exe -p:TestEnv=%TestEnv% -p:Tenant=I15South -p:Platform=Grid --test=RKCIUIAutomation.Test.Smoke.Verify_LinkCoverage_Level1 ./RKCIUIAutomation/bin/Debug/RKCIUIAutomation.dll --result=TestResult_I15South.xml'
    					sleep 1
                        nunit testResultsPattern: 'TestResult_I15South.xml'
                        sleep 1
						publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: './RKCIUIAutomation/Report/', reportFiles: 'extent_I15South.html', reportName: 'HTML Report', reportTitles: 'RKCIUIAutomation'])
						sleep 1
                        bat 'nunit-summary.exe ./TestResult_I15South.xml -out=./TestResult_I15South.html -xsl=./RKCIUIAutomation/Lib/html-summary.xslt'
                        sleep 1
                        emailext body: '${FILE,path="TestResult_I15South.html"}', subject: '$DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
    				}
                }
    		}
    	}
    }
}